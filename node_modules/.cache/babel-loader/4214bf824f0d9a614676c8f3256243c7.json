{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM } from '../Constants/Cartconstants';\nimport { REMOVE_FROM_CART } from '../Constants/Cartconstants';\n\nconst addToCart = (productid, qty) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get('http://localhost:3001/product/' + productid);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data.productid,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countinstock: data.countinstock,\n        qty\n      }\n    });\n  } catch (error) {}\n};\n\nexport { addToCart };\n\nconst removeFromCart = productid => dispatch => {\n  try {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      payload: productid\n    });\n  } catch (error) {}\n};\n\nexport { removeFromCart };","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/Fosy-Store/src/Actions/Cartaction.js"],"names":["axios","CART_ADD_ITEM","REMOVE_FROM_CART","addToCart","productid","qty","dispatch","data","get","type","payload","product","name","image","price","countinstock","error","removeFromCart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;AAGA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,MAAOC,QAAP,IAAoB;AACzD,MAAI;AAEH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,mCAAmCJ,SAA7C,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,aADE;AACaS,MAAAA,OAAO,EAAE;AAC7BC,QAAAA,OAAO,EAAEJ,IAAI,CAACH,SADe;AAE7BQ,QAAAA,IAAI,EAAEL,IAAI,CAACK,IAFkB;AAG7BC,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAHiB;AAI7BC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAJiB;AAK7BC,QAAAA,YAAY,EAAER,IAAI,CAACQ,YALU;AAM7BV,QAAAA;AAN6B;AADtB,KAAD,CAAR;AAUA,GAbD,CAcA,OAAOW,KAAP,EAAa,CAEZ;AAED,CAnBD;;AAqBA,SAASb,SAAT;;AAEA,MAAMc,cAAc,GAAIb,SAAD,IAAgBE,QAAD,IAAc;AACnD,MAAI;AACHA,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEP,gBADE;AAERQ,MAAAA,OAAO,EAAEN;AAFD,KAAD,CAAR;AAKA,GAND,CAOA,OAAOY,KAAP,EAAc,CAEb;AACD,CAXD;;AAaA,SAAQC,cAAR","sourcesContent":["import axios from 'axios';\r\nimport { CART_ADD_ITEM } from '../Constants/Cartconstants';\r\nimport { REMOVE_FROM_CART } from '../Constants/Cartconstants';\r\n\r\n\r\nconst addToCart = (productid, qty) => async (dispatch) => {\r\n\ttry {\r\n\r\n\t\tconst { data } = await axios.get('http://localhost:3001/product/' + productid);\r\n\t\tdispatch({\r\n\t\t\ttype: CART_ADD_ITEM, payload: {\r\n\t\t\t\tproduct: data.productid,\r\n\t\t\t\tname: data.name,\r\n\t\t\t\timage: data.image,\r\n\t\t\t\tprice: data.price,\r\n\t\t\t\tcountinstock: data.countinstock,\r\n\t\t\t\tqty\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcatch (error){\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\nexport { addToCart };\r\n\r\nconst removeFromCart = (productid) => (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: REMOVE_FROM_CART,\r\n\t\t\tpayload: productid\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tcatch (error) {\r\n\r\n\t}\r\n}\r\n\r\nexport {removeFromCart}"]},"metadata":{},"sourceType":"module"}