{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, REFRESH_REGISTER_INFO_STATE } from '../Constants/Signinconstants';\n\nconst signin = dateSelected => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      dateSelected\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('https://api.carbonintensity.org.uk/intensity/date/' + dateSelected);\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin };","map":{"version":3,"sources":["C:/Users/Administrator/Documents/CLIENT PROJECTS/Trilateral/src/Actions/Signinaction.js"],"names":["Axios","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","REFRESH_REGISTER_INFO_STATE","signin","dateSelected","dispatch","type","payload","data","get","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,gBAAnD,EAAqEC,2BAArE,QAAwG,8BAAxG;;AAGA,MAAMC,MAAM,GAAIC,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,mBAAR;AAA6BQ,IAAAA,OAAO,EAAE;AAACH,MAAAA;AAAD;AAAtC,GAAD,CAAR;;AAEA,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,uDAAuDL,YAAjE,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,mBAAR;AAA6BO,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AAMH,GARD,CASA,OAAOE,KAAP,EAAc;AACVL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,gBAAR;AAA0BM,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AAEJ,CAhBD;;AAqBA,SAASR,MAAT","sourcesContent":["import Axios from \"axios\"\r\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, REFRESH_REGISTER_INFO_STATE } from '../Constants/Signinconstants';\r\n\r\n\r\nconst signin = (dateSelected) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: {dateSelected}})\r\n\r\n    try {\r\n        const { data } = await Axios.get('https://api.carbonintensity.org.uk/intensity/date/' + dateSelected);\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n\r\n\r\n\r\n        \r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n    }\r\n\r\n} \r\n\r\n\r\n\r\n\r\nexport { signin};"]},"metadata":{},"sourceType":"module"}