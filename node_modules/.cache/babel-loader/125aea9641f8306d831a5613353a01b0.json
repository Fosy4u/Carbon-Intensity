{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { productListReducer, productDetailsReducer } from './Reducers/ProductReducer';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { cartReducer } from './Reducers/CartReducer';\nimport Cookie from 'js-cookie';\n/* To get access to the cookie and convert it back to JSON object so it can be saved in state. Note that || [] sets empty array if there is no item*/\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\nconst initialState = {};\nconst logger = createLogger();\nconst rootreducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\nconst store = createStore(rootreducer, initialState, composeEnhancer(applyMiddleware(thunk, logger)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/Fosy-Store/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","productListReducer","productDetailsReducer","thunk","createLogger","cartReducer","Cookie","cartItems","getJSON","initialState","logger","rootreducer","productList","productDetails","cart","composeEnhancer","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAwE,OAAxE;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,2BAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA;;AACA,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAe,WAAf,KAA+B,EAAjD;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,MAAM,GAAGN,YAAY,EAA3B;AACA,MAAMO,WAAW,GAAGb,eAAe,CAAC;AAChCc,EAAAA,WAAW,EAAEX,kBADmB;AAEhCY,EAAAA,cAAc,EAAEX,qBAFgB;AAGhCY,EAAAA,IAAI,EAAET;AAH0B,CAAD,CAAnC;AAMA,MAAMU,eAAe,GAAGC,MAAM,CAACC,kCAAP,IAA6CjB,OAArE;AACA,MAAMkB,KAAK,GAAGrB,WAAW,CAACc,WAAD,EAAcF,YAAd,EAA4BM,eAAe,CAAChB,eAAe,CAACI,KAAD,EAAQO,MAAR,CAAhB,CAA3C,CAAzB;AAGA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose  } from 'redux';\r\nimport { productListReducer, productDetailsReducer } from './Reducers/ProductReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger'\r\nimport { cartReducer } from './Reducers/CartReducer';\r\nimport Cookie from 'js-cookie';\r\n    \r\n\r\n/* To get access to the cookie and convert it back to JSON object so it can be saved in state. Note that || [] sets empty array if there is no item*/\r\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\r\n\r\nconst initialState = {};\r\nconst logger = createLogger();\r\nconst rootreducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n})\r\n\r\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\r\nconst store = createStore(rootreducer, initialState, composeEnhancer(applyMiddleware(thunk, logger)))\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}