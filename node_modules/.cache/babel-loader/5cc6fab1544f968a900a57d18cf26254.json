{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\CLIENT PROJECTS\\\\Trilateral\\\\src\\\\Component\\\\Screen\\\\PlotScreen.js\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport '../Css/PlotScreenCss.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst PlotScreen = () => {\n  const [chartData, setChatData] = useState({});\n\n  const chart = () => {\n    setChatData({\n      labels: ['monday', 'tuesday', 'wed', 'Thu', 'fri', 'sat'],\n      datasets: [{\n        label: 'level of thickness ',\n        data: [32, 100, 56, 67, 65, 34],\n        backgroundColor: ['rgba(75, 192, 192, 0.6)'],\n        bandwidth: 4\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" PLOT SCREEN \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: {\n      responsive: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default PlotScreen;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/CLIENT PROJECTS/Trilateral/src/Component/Screen/PlotScreen.js"],"names":["ReactDOM","React","Component","Line","useState","useEffect","PlotScreen","chartData","setChatData","chart","labels","datasets","label","data","backgroundColor","bandwidth","responsive"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,0BAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAGrB,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BJ,QAAQ,CAAC,EAAD,CAAzC;;AAEO,QAAMK,KAAK,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC;AACRE,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CADA;AAERC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,qBADX;AAEIC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,CAFV;AAGIC,QAAAA,eAAe,EAAE,CACb,yBADa,CAHrB;AAOIC,QAAAA,SAAS,EAAG;AAPhB,OADM;AAFF,KAAD,CAAX;AAiBH,GAlBM;;AAoBPV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,SAAZ;AAAuB,IAAA,OAAO,EAAE;AAC5BS,MAAAA,UAAU,EAAE;AADgB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAWH,CAvCD;;AAyCA,eAAeV,UAAf","sourcesContent":["import ReactDOM from 'react-dom';\r\nimport React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport '../Css/PlotScreenCss.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nconst PlotScreen = () => {\r\n\r\n\r\n    const [chartData, setChatData] = useState({})\r\n\r\n           const chart = () => {\r\n        setChatData({\r\n            labels: ['monday', 'tuesday', 'wed', 'Thu', 'fri', 'sat'],\r\n            datasets: [\r\n                {\r\n                    label: 'level of thickness ',\r\n                    data: [32, 100, 56, 67, 65, 34],\r\n                    backgroundColor: [\r\n                        'rgba(75, 192, 192, 0.6)'\r\n                        \r\n                    ],\r\n                    bandwidth : 4\r\n                }\r\n            ]\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        chart()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1> PLOT SCREEN </h1>\r\n            <div>\r\n                <Line data={chartData} options={{\r\n                    responsive: true\r\n                }} />\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlotScreen; "]},"metadata":{},"sourceType":"module"}