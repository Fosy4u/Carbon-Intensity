{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_SAVE_SHIPPING } from '../Constants/Cartconstants';\nimport { REMOVE_FROM_CART } from '../Constants/Cartconstants';\nimport Cookie from 'js-cookie';\n\nconst addToCart = (productid, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get('http://localhost:3001/api/product/product/' + productid);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countinstock: data.countinstock,\n        qty\n      }\n    });\n  } catch (error) {}\n  /*Implementing cookies from preserving state - cart itemms on page refresh*/\n\n  /*define getstate function to use get cart state. The getstate runs once dispatch action is completed; then setting cookies follows suite*/\n\n\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  /*seeting cookie ('name', 'value') Note that JSON.strigify coverts the state which is in object type to string type*/\n\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { addToCart };\n\nconst removeFromCart = productid => (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      payload: productid\n    });\n  } catch (error) {}\n  /*Implementing cookies from preserving state - cart itemms on page refresh*/\n\n  /*define getstate function to use get cart state. The getstate runs once dispatch action is completed; then setting cookies follows suite*/\n\n\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  /*seeting cookie ('name', 'value') Note that JSON.strigify coverts the state which is in object type to string type*/\n\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { removeFromCart };\n\nconst saveShipping = data => dispatch => {\n  try {\n    dispatch({\n      type: CART_SAVE_SHIPPING,\n      payload: data\n    });\n  } catch {}\n};\n\nexport { saveShipping };\n\nconst savePayment = paymentmethod => dispatch => {\n  try {\n    dispatch({\n      type: 'payment',\n      payload: paymentmethod\n    });\n  } catch {}\n};\n\nexport { savePayment };","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/Fosy-Store/src/Actions/Cartaction.js"],"names":["axios","CART_ADD_ITEM","CART_SAVE_SHIPPING","REMOVE_FROM_CART","Cookie","addToCart","productid","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countinstock","error","cart","cartItems","set","JSON","stringify","removeFromCart","saveShipping","savePayment","paymentmethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,4BAAlD;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnE,MAAI;AAEH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,+CAA+CL,SAAzD,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAEX,aADE;AACaY,MAAAA,OAAO,EAAE;AAC7BC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADe;AAE7BC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFkB;AAG7BC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHiB;AAI7BC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJiB;AAK7BC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALU;AAM7BZ,QAAAA;AAN6B;AADtB,KAAD,CAAR;AAWA,GAdD,CAeA,OAAOa,KAAP,EAAa,CAEZ;AACD;;AACA;;;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAA0Bb,QAAQ,EAAxC;AACA;;AACAL,EAAAA,MAAM,CAACmB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACA,CAxBD;;AA0BA,SAASjB,SAAT;;AAEA,MAAMqB,cAAc,GAAIpB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC7D,MAAI;AACHD,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAET,gBADE;AAERU,MAAAA,OAAO,EAAEP;AAFD,KAAD,CAAR;AAKA,GAND,CAOA,OAAOc,KAAP,EAAc,CAEb;AACD;;AACA;;;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAA0Bb,QAAQ,EAAxC;AACA;;AACAL,EAAAA,MAAM,CAACmB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACA,CAhBD;;AAkBA,SAASI,cAAT;;AAIA,MAAMC,YAAY,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AAE5C,MAAI;AACHA,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAEV,kBADE;AAERW,MAAAA,OAAO,EAAEH;AAFD,KAAD,CAAR;AAIA,GALD,CAMA,MAAK,CAEJ;AACD,CAXD;;AAaA,SAASiB,YAAT;;AAEA,MAAMC,WAAW,GAAIC,aAAD,IAAoBrB,QAAD,IAAc;AAEpD,MAAI;AACHA,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAE,SADE;AAERC,MAAAA,OAAO,EAAEgB;AAFD,KAAD,CAAR;AAIA,GALD,CAMA,MAAK,CAEJ;AACD,CAXD;;AAaA,SAASD,WAAT","sourcesContent":["import axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_SAVE_SHIPPING } from '../Constants/Cartconstants';\r\nimport { REMOVE_FROM_CART } from '../Constants/Cartconstants';\r\nimport Cookie from 'js-cookie';\r\n\r\n\r\nconst addToCart = (productid, qty) => async (dispatch, getState) => {\r\n\ttry {\r\n\r\n\t\tconst { data } = await axios.get('http://localhost:3001/api/product/product/' + productid);\r\n\t\tdispatch({\r\n\t\t\ttype: CART_ADD_ITEM, payload: {\r\n\t\t\t\tproduct: data._id,\r\n\t\t\t\tname: data.name,\r\n\t\t\t\timage: data.image,\r\n\t\t\t\tprice: data.price,\r\n\t\t\t\tcountinstock: data.countinstock,\r\n\t\t\t\tqty\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t}\r\n\tcatch (error){\r\n\t\t\r\n\t}\r\n\t/*Implementing cookies from preserving state - cart itemms on page refresh*/\r\n\t/*define getstate function to use get cart state. The getstate runs once dispatch action is completed; then setting cookies follows suite*/\r\n\tconst { cart: { cartItems } } = getState();\r\n\t/*seeting cookie ('name', 'value') Note that JSON.strigify coverts the state which is in object type to string type*/\r\n\tCookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n}\r\n\r\nexport { addToCart };\r\n\r\nconst removeFromCart = (productid) => (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: REMOVE_FROM_CART,\r\n\t\t\tpayload: productid\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tcatch (error) {\r\n\r\n\t}\r\n\t/*Implementing cookies from preserving state - cart itemms on page refresh*/\r\n\t/*define getstate function to use get cart state. The getstate runs once dispatch action is completed; then setting cookies follows suite*/\r\n\tconst { cart: { cartItems } } = getState();\r\n\t/*seeting cookie ('name', 'value') Note that JSON.strigify coverts the state which is in object type to string type*/\r\n\tCookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n}\r\n\r\nexport { removeFromCart };\r\n\r\n\r\n\r\nconst saveShipping = (data) => (dispatch) => {\r\n\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: CART_SAVE_SHIPPING,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t}\r\n\tcatch{\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport { saveShipping };\r\n\r\nconst savePayment = (paymentmethod) => (dispatch) => {\r\n\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: 'payment',\r\n\t\t\tpayload: paymentmethod\r\n\t\t});\r\n\t}\r\n\tcatch{\r\n\r\n\t}\r\n}\r\n\r\nexport { savePayment };"]},"metadata":{},"sourceType":"module"}