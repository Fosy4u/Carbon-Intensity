{"ast":null,"code":"/*Creation of store for state management*/import{createStore,combineReducers,applyMiddleware,compose}from'redux';import thunk from'redux-thunk';import{createLogger}from'redux-logger';import{getDataReducer}from'./Reducers/GetDataReducer.js';import storage from'redux-persist/lib/storage';import{updateDateReducer}from'./Reducers/UpdateDateReducer.js';/*function to save state to Local Storage. This is to help preserving the states on page refresh*/function saveToLocalStorage(state){try{var serialisedState=JSON.stringify(state);localStorage.setItem('state',serialisedState);}catch(e){console.log(e);}}/*function to get state from Local Storage. This is to help get the preserved states on page refresh*/function loadFromoLocalStorage(){try{var serialisedState=localStorage.getItem('state');if(serialisedState===null)return undefined;return JSON.parse(serialisedState);}catch(e){console.log(e);return undefined;}}var logger=createLogger();var persistedState=loadFromoLocalStorage();var rootreducer=combineReducers({carbon:getDataReducer,chosenDate:updateDateReducer});var composeEnhancer=window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_||compose;var store=createStore(rootreducer,persistedState,composeEnhancer(applyMiddleware(thunk,logger)));store.subscribe(function(){return saveToLocalStorage(store.getState());});export default store;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/CLIENT PROJECTS/Carbon-App/Carbon-Intensity/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createLogger","getDataReducer","storage","updateDateReducer","saveToLocalStorage","state","serialisedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromoLocalStorage","getItem","undefined","parse","logger","persistedState","rootreducer","carbon","chosenDate","composeEnhancer","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","store","subscribe","getState"],"mappings":"AAAA,0CAEA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAuE,OAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,OAASC,cAAT,KAA+B,8BAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAASC,iBAAT,KAAkC,iCAAlC,CAGA,kGACA,QAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CAC/B,GAAI,CACA,GAAMC,CAAAA,eAAe,CAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB,CACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BJ,eAA9B,EACH,CACD,MAAOK,CAAP,CAAU,CACNC,OAAO,CAACC,GAAR,CAAaF,CAAb,EACH,CACJ,CACD,sGACA,QAASG,CAAAA,qBAAT,EAAiC,CAC7B,GAAI,CACA,GAAMR,CAAAA,eAAe,CAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB,CACA,GAAIT,eAAe,GAAK,IAAxB,CACI,MAAOU,CAAAA,SAAP,CACA,MAAOT,CAAAA,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP,CACC,CACT,MAAOK,CAAP,CAAU,CACNC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACA,MAAOK,CAAAA,SAAP,CACH,CACJ,CAID,GAAME,CAAAA,MAAM,CAAGlB,YAAY,EAA3B,CAEA,GAAMmB,CAAAA,cAAc,CAAGL,qBAAqB,EAA5C,CAEA,GAAMM,CAAAA,WAAW,CAAGxB,eAAe,CAAC,CAChCyB,MAAM,CAAEpB,cADwB,CAEhCqB,UAAU,CAAEnB,iBAFoB,CAAD,CAAnC,CAOA,GAAMoB,CAAAA,eAAe,CAAGC,MAAM,CAACC,kCAAP,EAA6C3B,OAArE,CACA,GAAM4B,CAAAA,KAAK,CAAG/B,WAAW,CAACyB,WAAD,CAAcD,cAAd,CAA+BI,eAAe,CAAC1B,eAAe,CAACE,KAAD,CAAQmB,MAAR,CAAhB,CAA9C,CAAzB,CAEAQ,KAAK,CAACC,SAAN,CAAgB,iBAAMvB,CAAAA,kBAAkB,CAACsB,KAAK,CAACE,QAAN,EAAD,CAAxB,EAAhB,EACA,cAAeF,CAAAA,KAAf","sourcesContent":["/*Creation of store for state management*/\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger'\r\nimport { getDataReducer } from './Reducers/GetDataReducer.js';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { updateDateReducer } from './Reducers/UpdateDateReducer.js';\r\n\r\n\r\n/*function to save state to Local Storage. This is to help preserving the states on page refresh*/\r\nfunction saveToLocalStorage(state) {\r\n    try {\r\n        const serialisedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serialisedState)\r\n    }\r\n    catch (e) {\r\n        console.log (e)\r\n    }\r\n}\r\n/*function to get state from Local Storage. This is to help get the preserved states on page refresh*/\r\nfunction loadFromoLocalStorage() {\r\n    try {\r\n        const serialisedState = localStorage.getItem('state')\r\n        if (serialisedState === null) \r\n            return undefined\r\n            return JSON.parse(serialisedState)\r\n            }\r\n    catch (e) {\r\n        console.log(e);\r\n        return undefined\r\n    }\r\n}\r\n\r\n\r\n\r\nconst logger = createLogger();\r\n\r\nconst persistedState = loadFromoLocalStorage()\r\n\r\nconst rootreducer = combineReducers({\r\n    carbon: getDataReducer,\r\n    chosenDate: updateDateReducer\r\n   \r\n})\r\n\r\n\r\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\r\nconst store = createStore(rootreducer, persistedState,  composeEnhancer(applyMiddleware(thunk, logger)))\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\nexport default store"]},"metadata":{},"sourceType":"module"}