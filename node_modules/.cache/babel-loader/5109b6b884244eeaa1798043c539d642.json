{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL } from \"../Constants/Constants\";\nimport Axios from \"axios\";\nexport const ListProduct = () => dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  fetch('http://localhost:3001/api/product').then(response => response.json()).then(data => dispatch({\n    type: PRODUCT_LIST_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: PRODUCT_LIST_FAIL,\n    payload: error\n  }));\n};\nexport const ProductDetails = productid => dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productid\n  });\n  fetch('http://localhost:3001/api/product/product/' + productid).then(response => response.json()).then(data => dispatch({\n    type: PRODUCT_DETAILS_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: PRODUCT_DETAILS_FAIL,\n    payload: error\n  }));\n};\nexport const saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('http://localhost:3001/api/product', product, {\n        headers: {\n          'authorization': userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('http://localhost:3001/api/product/' + product._id, product, {\n        headers: {\n          'authorization': userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const deleteProduct = productid => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productid\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.delete('http://localhost:3001/api/product/' + productid, {\n      headers: {\n        'authorization': userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Administrator/Documents/CLIENT PROJECTS/Trilateral/src/Actions/Productaction.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","Axios","ListProduct","dispatch","type","fetch","then","response","json","data","payload","catch","error","ProductDetails","productid","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","message","deleteProduct","delete","success"],"mappings":"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","sourcesContent":["import {\r\n    PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_FAIL,\r\n    PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL\r\n} from \"../Constants/Constants\";\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\n\r\nexport const ListProduct = () => (dispatch) => {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    \r\n    fetch('http://localhost:3001/api/product')\r\n        .then(response => response.json())\r\n        .then(data => dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data }))\r\n        .catch(error => dispatch({ type: PRODUCT_LIST_FAIL, payload: error }))\r\n} \r\n\r\nexport const ProductDetails = (productid) => (dispatch) => {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload : productid });\r\n\r\n    fetch('http://localhost:3001/api/product/product/' + productid)\r\n        .then(response => response.json())\r\n        .then(data => dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data }))\r\n        .catch(error => dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error }))\r\n} \r\n\r\nexport const saveProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product })\r\n        const { userSignin: { userInfo } } = getState();\r\n        if (!product._id) {\r\n            const { data } = await Axios.post('http://localhost:3001/api/product', product, { headers: { 'authorization':  userInfo.token } });\r\n            dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data })\r\n        }\r\n        else {\r\n            const { data } = await Axios.put('http://localhost:3001/api/product/' + product._id, product, { headers: { 'authorization':  userInfo.token } });\r\n            dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data })\r\n        }\r\n        \r\n    }\r\n    catch (error) {\r\n        dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message })\r\n    }\r\n}\r\nexport const deleteProduct = (productid) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productid });\r\n        const { userSignin: { userInfo } } = getState();\r\n        const { data } = await Axios.delete('http://localhost:3001/api/product/' + productid, { headers: { 'authorization':  userInfo.token } });\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true })\r\n\r\n    }\r\n    catch (error)\r\n    {\r\n        dispatch({ type: PRODUCT_DELETE_FAIL, payload: error })\r\n} \r\n} \r\n"]},"metadata":{},"sourceType":"module"}